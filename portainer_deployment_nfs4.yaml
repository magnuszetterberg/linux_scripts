version: "3"

services:
  watch:
    image: foo.bar
    command: yarn run start
    restart: unless-stopped
    volumes:
      - watch:/app/config
    environment:
 

# Above is your normal docker-compose, 
# Below are the deployment steps for connecting it to a network, 
# Setting up volumes on the nodes it runs on
# Connects to traefik, and and Traefik to setup up routes for it

# First, make sure that it is connected to the traefik-public network. This is setting that belongs to the 'service'
    networks:
      - traefik-public


# Here we have the deployment for setting up the container inside the docker swarm cluster
    deploy:
      placement:
        constraints: #Set a contraint on the stack, to NOT deploy on a manager node
          - node.role != manager
      labels: #The labes below are setup against the service name mentioned above
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.watch-http.rule=Host(`foo.bar`)
        - traefik.http.routers.watch-http.entrypoints=http
        - traefik.http.routers.watch-http.middlewares=https-redirect
        - traefik.http.routers.watch-https.rule=Host(`foo.bar`)
        - traefik.http.routers.watch-https.entrypoints=https
        - traefik.http.routers.watch-https.tls=true
        - traefik.http.routers.watch-https.tls.certresolver=le
        - traefik.http.services.watch.loadbalancer.server.port=3000

# This indicates that it should connect to the already existing network called 'traefik-public'
networks:
  traefik-public:
    external: true
# And here we setup the volumes, so that we can move the stack between different nodes, without losing the data from the volumes on the nfs4 share
volumes:
  watch:
    driver: local
    driver_opts:
      type: nfs4
      o: addr=<nfs4 server(seems only accept ip's>,rw
      device: ":/<path to shared nfs4 folder>/watch/"  # Please note - this '../watch/' folder mentioned, MUST be created manually in the volume before deploying this stack.
